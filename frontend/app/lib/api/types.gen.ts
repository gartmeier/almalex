// This file is auto-generated by @hey-api/openapi-ts

export type ChatCreate = {
  id: string;
};

export type ChatDetail = {
  id: string;
  title: string | null;
  messages: Array<MessageResponse>;
};

export type ChatListItem = {
  id: string;
  title: string | null;
  created_at: string;
};

export type ChatUpdate = {
  title: string;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type MessageRequest = {
  id: string;
  content: string;
};

export type MessageResponse = {
  id: string;
  role: string;
  content: string;
};

export type RateLimit = {
  remaining: number;
  used: number;
  max: number;
};

export type TokenResponse = {
  access_token: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type CreateTokenData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/token";
};

export type CreateTokenResponses = {
  /**
   * Successful Response
   */
  200: TokenResponse;
};

export type CreateTokenResponse =
  CreateTokenResponses[keyof CreateTokenResponses];

export type ListChatsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/chats/";
};

export type ListChatsResponses = {
  /**
   * Successful Response
   */
  200: Array<ChatListItem>;
};

export type ListChatsResponse = ListChatsResponses[keyof ListChatsResponses];

export type CreateChatData = {
  body: ChatCreate;
  path?: never;
  query?: never;
  url: "/api/chats/";
};

export type CreateChatErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateChatError = CreateChatErrors[keyof CreateChatErrors];

export type CreateChatResponses = {
  /**
   * Successful Response
   */
  201: ChatListItem;
};

export type CreateChatResponse = CreateChatResponses[keyof CreateChatResponses];

export type DeleteChatData = {
  body?: never;
  path: {
    chat_id: string;
  };
  query?: never;
  url: "/api/chats/{chat_id}";
};

export type DeleteChatErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteChatError = DeleteChatErrors[keyof DeleteChatErrors];

export type DeleteChatResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteChatResponse = DeleteChatResponses[keyof DeleteChatResponses];

export type ReadChatData = {
  body?: never;
  path: {
    chat_id: string;
  };
  query?: never;
  url: "/api/chats/{chat_id}";
};

export type ReadChatErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadChatError = ReadChatErrors[keyof ReadChatErrors];

export type ReadChatResponses = {
  /**
   * Successful Response
   */
  200: ChatDetail;
};

export type ReadChatResponse = ReadChatResponses[keyof ReadChatResponses];

export type UpdateChatData = {
  body: ChatUpdate;
  path: {
    chat_id: string;
  };
  query?: never;
  url: "/api/chats/{chat_id}";
};

export type UpdateChatErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateChatError = UpdateChatErrors[keyof UpdateChatErrors];

export type UpdateChatResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type UpdateChatResponse = UpdateChatResponses[keyof UpdateChatResponses];

export type CreateMessageData = {
  body: MessageRequest;
  path: {
    chat_id: string;
  };
  query?: never;
  url: "/api/chats/{chat_id}/messages";
};

export type CreateMessageErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateMessageError = CreateMessageErrors[keyof CreateMessageErrors];

export type CreateMessageResponses = {
  /**
   * Event stream
   */
  200: Blob | File;
};

export type CreateMessageResponse =
  CreateMessageResponses[keyof CreateMessageResponses];

export type GetRateLimitData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/chats/rate-limit";
};

export type GetRateLimitResponses = {
  /**
   * Successful Response
   */
  200: RateLimit;
};

export type GetRateLimitResponse =
  GetRateLimitResponses[keyof GetRateLimitResponses];

export type ClientOptions = {
  baseUrl: "http://localhost:8000" | (string & {});
};
