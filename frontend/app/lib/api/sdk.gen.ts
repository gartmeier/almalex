// This file is auto-generated by @hey-api/openapi-ts

import type {
  Client,
  Options as ClientOptions,
  TDataShape,
} from "@hey-api/client-fetch";
import { client as _heyApiClient } from "./client.gen";
import type {
  CreateMessageData,
  CreateMessageError,
  CreateMessageResponse,
  ReadChatData,
  ReadChatError,
  ReadChatResponse,
  ReadDocumentData,
  ReadDocumentError,
  ReadDocumentResponse,
} from "./types.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Read Chat
 */
export const readChat = <ThrowOnError extends boolean = false>(
  options: Options<ReadChatData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ReadChatResponse,
    ReadChatError,
    ThrowOnError
  >({
    url: "/api/chats/{chat_id}",
    ...options,
  });
};

/**
 * Create Message
 */
export const createMessage = <ThrowOnError extends boolean = false>(
  options: Options<CreateMessageData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    CreateMessageResponse,
    CreateMessageError,
    ThrowOnError
  >({
    url: "/api/chats/{chat_id}/messages",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Read Document
 */
export const readDocument = <ThrowOnError extends boolean = false>(
  options: Options<ReadDocumentData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ReadDocumentResponse,
    ReadDocumentError,
    ThrowOnError
  >({
    url: "/api/documents/{document_id}",
    ...options,
  });
};
